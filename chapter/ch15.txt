= Ramaze::Trinity

The Trinity in Ramaze consists of the three elements of state:

* The past `Ramaze::Request` a client has made that led to the invocation of the current Action.
* The present `Ramaze::Session` is all the present state we have about the client.
* The future `Ramaze::Response` is what we will respond to the client.

The Trinity module makes it simple to access these three things, by simply including the module into your class or extending your instance. Let's say, we want to be aware in a module about which role a user has, something that traditionally only view/controller know of.
In Ramaze you can simply do following:

[source,ruby]
--------------------------------------------------------------------------------
class User
  extend Ramaze::Trinity

  def self.admin?
    User[:id => session[:user_id], :role => 'admin']
  end
end
--------------------------------------------------------------------------------
